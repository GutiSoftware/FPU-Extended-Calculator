
00409A07 | 90                    		| nop                       					//avoid original code frndint  (round)            
00409A08 | 90                    		| nop                        					//avoid original code frndint  (round)                         
______________________________________________________________________________________________________________

In the original code, the real number that had to be shown, had been previously rounded and then multiplied by 100000000000000000, and is into the st0
FPU register just ready to be store in memory in 18 digits BCD (Binary Coded Decimal) format.
With the new code we avoid the initial rounded code (frndint noped) and then obtain the decimal part and store it in memory just before do the same with
the integer part to get an extra precision of the real number. Then we avoid again other rounded made in the original code (in normal asm). Indeed the
memory space used for the last rounded is used to insert the new code.

00409A2A | D9C0                  		| fld st(0),st(0)                          			//store value in st0 also in st1
00409A2C | D9C0                  		| fld st(0),st(0)                          			//now also in st2
00409A2E | 9B                    		| fwait                                   			//Check pending unmasked floating-point exceptions
00409A2F | D97D E6               		| fnstcw word ptr ss:[ebp-1A]             		//save FPU register control word in memory
00409A32 | 66:8165 E6 FFF3      	| and word ptr ss:[ebp-1A],F3FF           	//clears only the RC (Rounding Control) bits in FPU register control word, leaving all other bits unchanged
00409A38 | 66:814D E6 000C       	| or word ptr ss:[ebp-1A],C00            		//set the RC bits to the FPU register control word to cero (00) -> truncate
00409A3E | D96D E6               		| fldcw word ptr ss:[ebp-1A]             		//load the FPU register control word with the new set bits
00409A41 | D9FC                  		| frndint                                			//with these setting frndint make a truncate of the st0 register value
00409A43 | DEE9                  		| fsubp st(1),st(0)                       			//subtract st1 minus st0
00409A45 | 66:B8 6400            		| mov ax,64                                			//store $64 (decimal 100) in ax
00409A49 | 66:8945 E6           		| mov word ptr ss:[ebp-1A],ax             		//move ax to memory
00409A4D | DE4D E6               		| fimul st(0),word ptr ss:[ebp-1A]       		//multiply value in st0 by decimal 100
00409A50 | DF75 E8               		| fbstp tword ptr ss:[ebp-18],st(0)       	//store decimal part of st0 value into 18 digits BCD (Binary Coded Decimal) format, store it in memory and pop st0
00409A53 | DF75 E9               		| fbstp tword ptr ss:[ebp-17],st(0)        	//store integer part of st0 value into 18 digits BCD (Binary Coded Decimal) format, store it in memory and pop st0
00409A56 | 9B                    		| fwait                                   			//Check pending unmasked floating-point exception
00409A57 | DBE3                  		| fninit                                  				//Initialize FPU without checking for pending unmasked floating-point exceptio
00409A59 | 8D7B 03               		| lea edi,dword ptr ds:[ebx+3]            		//unchanged (originalcode)
00409A5C | BA 0A000000           	| mov edx,A                              			//now 12 pairs of figures (BDC 10+2)
00409A61 | 9B                    		| fwait                                   			//unchanged (originalcode)
00409A62 | 8A442A E7             		| mov al,byte ptr ds:[edx+ebp-19]          
00409A66 | 88C4                  		| mov ah,al                               
00409A68 | C0E8 04               		| shr al,4                               
00409A6B | 80E4 0F               		| and ah,F                                 
00409A6E | 66:05 3030            		| add ax,3030                              
00409A72 | 66:AB                 		| stosw                                    
00409A74 | 4A                    		| dec edx                                			//All code uncommented is uncnged original code
00409A75 | 75 EB                 		| jne 409A62                            
00409A77 | 32C0                  		| xor al,al                               
00409A79 | AA                    		| stosb                                   
00409A7A | 8B7D F8               		| mov edi,dword ptr ss:[ebp-8]            
00409A7D | 037D 08              		| add edi,dword ptr ss:[ebp+8]          
00409A80 | 79 07                 		| jns 409A89                               
00409A82 | 31C0                  		| xor eax,eax                            
00409A84 | E9 52FFFFFF           		| jmp 4099DB                             
00409A89 | 3B7D 0C               		| cmp edi,dword ptr ss:[ebp+C]           
00409A8C | 72 03                 		| jb 409A91                              
00409A8E | 8B7D 0C               		| mov edi,dword ptr ss:[ebp+C]           
00409A91 | BF 14000000           	| mov edi,14                             			//19 figures plus (,)       