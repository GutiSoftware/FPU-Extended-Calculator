
00476824  | 8D7B 03               	 lea edi,dword ptr ds:[ebx+3]              // new zone
00476827  | D9C0                      	 fld st(0),st(0)                                        // FPU calculation
00476829  | 9B                    	 fwait                                      
0047682A  | D9C0                	 fld st(0),st(0)                            
0047682C  | D9FC                 	 frndint                                  
0047682E  | DBF1                 	 fcomi st(0),st(1)                         
00476830  | 9B                   	 fwait                                     
00476831  | 77 18                	 ja 47684B                                         // jump if round is greater than the number                       
00476833  | DEEA                	 fsubp st(2),st(0)                          
00476835  | D9C9                	 fxch st(0),st(1)                           
00476837  | DB2D 6D684700    fld st(0),tword ptr ds:[47686D]            //load 100 in st0
0047683D  | D8C9                	 fmul st(0),st(1)                           
0047683F  | DF75 E8              	 fbstp tword ptr ss:[ebp-18],st(0)         //save the fraction part in BCD format
00476842  | D9C9              	 fxch st(0),st(1)                          
00476844  | DF75 E9             	 fbstp tword ptr ss:[ebp-17],st(0)         //save the integer part in BCD format 
00476847  | 9B                 		 fwait                                     
00476848  | DBE3                  	 fninit           //initialize FPU                        
0047684A  | C3                   	 ret                                      
0047684B  | DB2D 5B684700    fld st(0),tword ptr ds:[47685B]            //load 1 in st0
00476851  | DEE9                  	 fsubp st(1),st(0)                                     
00476853  | D9C0                   	 fld st(0),st(0)                          
00476855  | EB DC               	 jmp 476833                                
00476857  | 0000                  	 add byte ptr ds:[eax],al                 
00476859  | 0000               	 add byte ptr ds:[eax],al                  
0047685B  | 0000                 	 add byte ptr ds:[eax],al                      //1 in FPU 10 bytes format
0047685D  | 0000                 	 add byte ptr ds:[eax],al                            
0047685F  | 0000                	 add byte ptr ds:[eax],al                  
00476861  | 0000                  	 add byte ptr ds:[eax],al                   
00476863  | 0080 FF3F0000      add byte ptr ds:[eax+3FFF],al             
00476869  | 0000                  	 add byte ptr ds:[eax],al                 
0047686B  | 0000                  	 add byte ptr ds:[eax],al                  
0047686D  | 0000                  	 add byte ptr ds:[eax],al                 //100    in FPU 10 bytes format
0047686F  | 00C8               	 add al,cl                               
00476871  | 05 40000000          add eax,40                                


00409A03  | 90                    	 nop      //avoid frndint (round)                              
00409A04  | 90                    	 nop                                        |


00409A26  | E8 F9CD0600          call 476824                              //call to the new code zone (FPU calculation)
00409A2B  | 90                  	 nop                                       
00409A2C  | BA 0A000000         mov edx,A                               //12  BDC bytes (10 integer part + 2 fraction part)
00409A31  | 9B                   	 fwait                                    
00409A32  | 8A442A E7            	 mov al,byte ptr ds:[edx+ebp-19]     // (19 to get new size)   


00409A64  | EB 27                	 jmp 409A8D        //avoid round                         
00409A8D  | BF 14000000          mov edi,14         //19 digits + the (,)                  




