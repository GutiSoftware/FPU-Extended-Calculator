00476824 //new FPU code
8D 7B 03 D9 C0 9B D9 C0 D9 FC DB F1 9B 77 14 DE EA D9 C9 DE 0D 4F 68 47 00 DF 75 E8 DF 75 E9 9B DB E3 C3 D9 E8 DE E9 D9 C0 EB E4 64
lea edi,dword ptr ds:[ebx+3]
fld st(0),st(0)
fwait
fld st(0),st(0)
frndint
fcomi st(0),st(1)   //is st(0) greater rounded than if not?
fwait
ja 476847
fsubp st(2),st(0)
fxch st(0),st(1)
fimul st(0),word ptr ds:[47684F]    //multiply by 100
fbstp tword ptr ss:[ebp-18],st(0)    //store the fractional part rounded
fbstp tword ptr ss:[ebp-17],st(0)    //store the integer part 
fwait
fninit    //initialized FPU
ret
fld1
fsubp st(1),st(0)
fld st(0),st(0)
jmp 476833

00409A03 // omit frndint (round)
90 90
nop                                    
nop                                        |

00409A26 // call to the new code zone
E8 F9 CD 06 00 90 BA 0A 00 00 00

00409A26  | E8 F9CD0600          call 476824                              //call to new FPU zone code
00409A2B  | 90                  	 nop                                       
00409A2C  | BA 0A000000         mov edx,A                               //12 pairs (BDC 10+2)


00409A64 // omit round
EB 27
00409A64  | EB 27                	 jmp 409A8D

00409A8D //increase to 20
BF 14 00 00 00                                 
00409A8D  | BF 14000000          mov edi,14         //19 digits + (,)                 




